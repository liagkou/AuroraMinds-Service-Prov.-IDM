{"version":3,"sources":["utils/userManager.js","components/frontPage.js","components/loginPage.js","components/mainPage.js","components/homePage.js","components/callbackOL.js","components/callbackKC.js","reducer/index.js","store/store.js","components/credentialStorage.js","components/checkalreadyCredential.js","components/personalization.js","components/Storage.js","components/CheckAccessCredential.js","components/watch-verifier.js","components/loginDS.js","components/verifyPresentation.js","routing/routes.js","components/root.js","static/restaurant.jpg","theme.js","components/app.js","serviceWorker.js","index.js"],"names":["userManager","createUserManager","client_id","redirect_uri","response_type","scope","authority","silent_redirect_uri","automaticSilentRenew","filterProtocolClaims","loadUserInfo","userManagerOlympus","FrontPage","Container","style","styles","title","Typography","variant","align","subtitle","buttonBox","Button","size","onClick","event","preventDefault","props","dispatch","push","React","Component","paddingTop","marginTop","marginButtom","width","flex","list","listStyle","li","display","connect","state","user","oidc","LoginPage","signinRedirect","window","location","href","Box","root","startIcon","this","onLoginClickOlympus","button","onLoginCredentialsClick","flexDirection","justifyContent","alignItems","flexShrink","MainPage","document","cookie","encodeURIComponent","JSON","stringify","profile","console","log","today","Date","getYear","setYear","localStorage","getItem","swal","fire","setItem","header","AppBar","position","appBar","Toolbar","IconButton","edge","color","aria-label","sx","mr","fontSize","popupId","popupState","Fragment","bindTrigger","menuButton","Menu","bindMenu","MenuItem","getUser","storeUser","text","icon","then","r","open","removeUser","sessionStorage","clear","welcomeMessage","actionButton","alert","minHeight","background","padding","boxShadow","borderRadius","marginBottom","fontWeight","textAlign","textTransform","CallbackPageOL","successCallback","type","USER_FOUND","payload","errorCallback","error","CallbackPageKC","sub","reducer","combineReducers","routing","routerReducer","oidcReducer","store","compose","applyMiddleware","next","action","getState","routerMiddleware","browserHistory","createStore","createStoreWithMiddleware","loadUser","CredentialStorage","verifyUserData","missingFields","filter","field","length","join","flexGrow","src","height","name","birthdate","nickname","middle_name","family_name","close","top","left","fieldDisplayNames","given_name","useState","revealDetails","setRevealDetails","handleToggleReveal","prevState","Object","entries","map","value","charAt","toUpperCase","slice","Switch","checked","onChange","atLeastOneFieldRevealed","values","some","isNewCurriculum","test","canUserContinue","revealedInfo","hiddenInfo","signoutRedirect","personalization","removeItem","uppercase","StorageC","ifCredentialisMissingDisableTheDeleteButton","setState","isDeleteButtonDisabled","pressToDelete","alt","Card","card","credentials","disabled","deleteButton","continueButton","err","backgroundColor","boxSizing","hasAccess","preferred_username","userDataCookie","cookieArr","split","i","cookiePair","trim","decodeURIComponent","getCookie","parse","e","details","setDetails","useEffect","isRole","predicates","Full_Name","revealed","attribute","Birthdate","Clinician_Id","Email","Role","predicate","container","LoginDS","useHistory","fullWidth","userData","VerifyPresentation","history","setUserData","parsedData","syncHistoryWithStore","Routes","path","component","HomePage","CheckalreadyCredential","CheckAccessCredential","verifier","loginDS","verifyPresentation","content","Root","children","theme","createMuiTheme","palette","backgroundImage","Image","paper","primary","main","secondary","warmGrey","light","success","warning","unknown","common","black","white","backgroundSize","box","maxWidth","maxHeight","marginLeft","marginRight","App","Paper","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a2ab514.chunk.js","sourcesContent":["import { createUserManager } from 'redux-oidc';\n\nconst userManagerConfig = {\n  client_id: 'olympus-service-provider',\n  redirect_uri: 'http://localhost:3000/callbackKC',\n  response_type: 'token id_token',\n  scope: 'openid profile',\n  authority: 'http://localhost:8082/auth/realms/olympus-realm/',\n  silent_redirect_uri: 'localhost:3000/silent_renew.html',\n  automaticSilentRenew: false,\n  filterProtocolClaims: true,\n  loadUserInfo: true,\n};\n\nconst olympusUserManagerConfig = {\n  client_id: 'olympus-service-provider',\n  redirect_uri: 'http://localhost:3000/callbackOL',\n  response_type: 'id_token',\n  scope: 'openid name',\n  authority: 'http://localhost:8080/',\n  silent_redirect_uri: `localhost:3000/silent_renew.html`,\n  automaticSilentRenew: false,\n  filterProtocolClaims: true,\n  loadUserInfo: true,\n};\n\nconst userManager = createUserManager(userManagerConfig);\nconst userManagerOlympus = createUserManager(olympusUserManagerConfig);\n\nexport {userManager, userManagerOlympus};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"react-router-redux\";\nimport { Button, Container, Typography } from \"@material-ui/core\";\n\nclass FrontPage extends React.Component {\n  render() {\n    return (\n      <Container >\n        <Container style={styles.title}>\n          <Typography variant=\"h3\" align=\"center\">\n            Welcome to\n          </Typography>\n          <Typography variant=\"h2\" align=\"center\">\n            University Verification System\n          </Typography>\n        </Container>\n        <Typography variant=\"subtitle1\" align=\"center\" style={styles.subtitle}>\n\n        </Typography>\n        <Container style={styles.buttonBox}>\n          <Button\n            size=\"medium\"\n            variant=\"outlined\"\n            onClick={(event) => {\n              event.preventDefault();\n              this.props.dispatch(push(\"/login\"));\n            }}\n          >\n            Login\n          </Button>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nconst styles = {\n  buttonBox: {\n    paddingTop: \"10px\",\n    marginTop: \"auto\",\n    marginButtom: \"auto\",\n    width: \"150px\",\n  },\n  subtitle: {\n    paddingTop: \"10px\",\n  },\n  title: {\n    flex: \"1 0 auto\",\n  },\n  list: {\n    listStyle: \"none\",\n  },\n  li: {\n    display: \"flex\",\n  },\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.oidc.user,\n  };\n}\n\nexport default connect(mapStateToProps)(FrontPage);\n","import { Box, Button, Typography } from \"@material-ui/core\";\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport React from \"react\";\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\n\nclass LoginPage extends React.Component {\n\n  onLoginClick(event) {\n    event.preventDefault();\n    userManager.signinRedirect();\n  }\n\n  onLoginClickOlympus(event) {\n    event.preventDefault();\n    userManagerOlympus.signinRedirect();\n  }\n\n  onLoginCredentialsClick(event) {\n     event.preventDefault();\n     window.location.href = \"http://localhost:8080/loginCredentials\";\n   }\n\n  render() {\n    return (\n      <Box style={styles.root}>\n        <Typography variant=\"h5\" align=\"center\">\n          User Authorization\n        </Typography>\n\n        <Button\n          size=\"large\"\n          variant=\"outlined\"\n          startIcon={<DirectionsIcon />}\n          onClick={this.onLoginClickOlympus}\n          style={styles.button}\n        >\n          Log in with Aurora Minds\n        </Button>\n\n        <Button\n          size=\"large\"\n          variant=\"outlined\"\n          startIcon={<DirectionsIcon />}\n          onClick={this.onLoginCredentialsClick}\n          style={styles.button}\n        >\n          Log in with Credentials\n        </Button>\n      </Box>\n    );\n  }\n}\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    flexShrink: 1,\n  },\n  button: {\n    marginTop: \"20px\",\n  },\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\nimport { Button, Container, Typography, MenuItem, Menu, IconButton, AppBar, Toolbar, Box } from \"@material-ui/core\";\nimport { push } from \"react-router-redux\";\nimport LoginPage from \"./loginPage\";\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport swal from 'sweetalert2';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nclass MainPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    document.cookie = 'userData=' + encodeURIComponent(JSON.stringify(props.user.profile));\n    }\n\n  render() {\n    const { user } = this.props;\n    console.log(\"start user\");\n    console.log(user);\n    console.log(\"end user\");\n\n    let birthdate = 24;\n    let today = new Date();\n    console.log(today.getYear());\n    today.setYear(today.getYear() + 1900 - 18);\n    let over18 = new Date(birthdate) < today;\n\n    if (!over18) {\n      alert(\" Your age is under 18, sending back to the login page...\");\n      return <LoginPage />;\n    }\n\n    var hasRegistered = localStorage.getItem('hasRegistered');\n    if (!hasRegistered) {\n      swal.fire(\"You have successfully registered to Aurora Minds\");\n    }\n    localStorage.setItem('hasRegistered', 'true');\n\n    return (\n      <Container style={styles.root}>\n        <Container style={styles.header}>\n          <AppBar position=\"static\" style={styles.appBar}>\n            <Toolbar>\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n              >\n                <AccountCircle style={{ fontSize: 40 }} />\n              </IconButton>\n              <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                {(popupState) => (\n                  <React.Fragment>\n                    <Button color=\"inherit\" {...bindTrigger(popupState)} style={styles.menuButton}>\n                      MAIN PAGE\n                    </Button>\n                    <Menu {...bindMenu(popupState)}>\n                      <MenuItem onClick={(event) => {\n                        event.preventDefault();\n                        userManager.getUser();\n                        userManagerOlympus.storeUser();\n                        swal.fire({\n                          title: \"Privacy notice!\",\n                          text: \"Sensitive information will be rendered to the screen\",\n                          icon: \"warning\",\n                          button: \"Ok\",\n                        }).then(r => this.props.dispatch(push(\"/information\")));\n                      }}>Personal Information</MenuItem>\n                      <MenuItem onClick={(event) => {\n                        event.preventDefault();\n                        userManager.getUser();\n                        userManagerOlympus.storeUser();\n                        window.open(\"http://localhost:8080/changePassword\", \"_blank\");\n                      }}>Change Password</MenuItem>\n                      <MenuItem onClick={(event) => {\n                        event.preventDefault();\n                        userManager.getUser();\n                        userManagerOlympus.storeUser();\n                        window.open(\"http://localhost:8080/deleteAccount\", \"_blank\");\n                      }}>Delete Account</MenuItem>\n                      <MenuItem onClick={(event) => {\n                        event.preventDefault();\n                        userManager.removeUser();\n                        userManagerOlympus.removeUser();\n                        sessionStorage.clear();\n                        window.open(\"http://localhost:8080/logout\", \"_blank\");\n                      }} style={{ color: \"red\" }}>Logout</MenuItem>\n                    </Menu>\n                  </React.Fragment>\n                )}\n              </PopupState>\n            </Toolbar>\n          </AppBar>\n        </Container>\n        <Typography variant=\"h4\" style={styles.welcomeMessage}>\n          Welcome user. This is the main dashboard.\n        </Typography>\n        <Typography variant=\"h6\" style={styles.subtitle}>\n          Access the Management System\n        </Typography>\n        <Button\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n          style={styles.actionButton}\n          onClick={(event) => {\n            event.preventDefault();\n            userManager.getUser();\n            userManagerOlympus.storeUser().then(r => this.props.dispatch(push(\"/checkAccessCredential\")));\n          }}\n        >\n          Get Credential\n        </Button>\n      </Container>\n    );\n  }\n}\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    background: \"linear-gradient(to right, #33a7c4, #74bfc4)\",\n    padding: \"40px\",\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"20px\",\n  },\n  header: {\n    width: \"100%\",\n    marginBottom: \"20px\",\n  },\n  appBar: {\n    background: \"linear-gradient(to right, #33a7c4, #74bfc4)\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\n  },\n  menuButton: {\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n  welcomeMessage: {\n    color: \"#fff\",\n    marginBottom: \"20px\",\n    textAlign: \"center\",\n  },\n  subtitle: {\n    color: \"#fff\",\n    marginBottom: \"20px\",\n    textAlign: \"center\",\n  },\n  actionButton: {\n    padding: \"10px 20px\",\n    borderRadius: \"10px\",\n    textTransform: \"none\",\n    fontSize: \"16px\",\n  },\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.oidc.user,\n  };\n}\n\nexport default connect(mapStateToProps)(MainPage);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FrontPage from \"./frontPage\";\nimport LoginPage from \"./loginPage\";\nimport MainPage from \"./mainPage\";\n\nfunction HomePage(props) {\n    const { user } = props\n\n\treturn !user ? <LoginPage /> : <MainPage />;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.oidc.user,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CallbackComponent, USER_FOUND } from \"redux-oidc\";\nimport { push } from \"react-router-redux\";\nimport { userManagerOlympus } from \"../utils/userManager\";\n\nclass CallbackPageOL extends React.Component {\n  render() {\n    // just redirect to '/' in both cases\n    return (\n      <div>\n      <CallbackComponent\n      userManager={userManagerOlympus}\n   \n    \tsuccessCallback={user => {\n    \t\tthis.props.dispatch({\n    \t\t\ttype: USER_FOUND,\n    \t\t\tpayload: user\n    \t\t})\n    \t\tthis.props.dispatch(push(\"/success\"));\n    \t}}\n    \terrorCallback={(error) => {\n    \t\talert(\"error occured: \"+error)\n    \t\tconsole.log(error)\n    \t\tthis.props.dispatch(push(\"/\"));\n    \t\tconsole.error(error);\n    \t}}\n    >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n      </div>\n    );\n  }\n}\n\nexport default connect()(CallbackPageOL);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CallbackComponent, USER_FOUND } from \"redux-oidc\";\nimport { push } from \"react-router-redux\";\nimport { userManager } from \"../utils/userManager\";\n\nclass CallbackPageKC extends React.Component {\n  render() {\n    // just redirect to '/' in both cases\n    return (\n      <div>\n      <CallbackComponent\n        userManager={userManager}\n     \n      \tsuccessCallback={user => {\n      \t\tconsole.log(user)\n      \t\t(\"you're logged in as \"+user.profile.sub)\n      \t\tthis.props.dispatch({\n      \t\t\ttype: USER_FOUND,\n      \t\t\tpayload: user\n      \t\t})\n      \t\tthis.props.dispatch(push(\"/success\"));\n      \t}}\n      \terrorCallback={(error) => {\n      \t\talert(\"error occured: \"+error)\n      \t\tconsole.log(error)\n      \t\tthis.props.dispatch(push(\"/\"));\n      \t\tconsole.error(error);\n      \t}}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n      </div>\n    );\n  }\n}\n\nexport default connect()(CallbackPageKC);\n","import { routerReducer } from 'react-router-redux';\nimport { combineReducers } from 'redux';\nimport { reducer as oidcReducer } from 'redux-oidc';\n\nconst reducer = combineReducers(\n  {\n    routing: routerReducer,\n    oidc: oidcReducer,\n  }\n);\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { loadUser } from \"redux-oidc\";\nimport { routerMiddleware } from 'react-router-redux';\nimport reducer from '../reducer/index';\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\nimport { browserHistory } from 'react-router';\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n  console.log(\"Action type:\", action.type);\n  console.log(\"Action payload:\", action.payload);\n  console.log(\"State before:\", store.getState());\n  next(action);\n  console.log(\"State after:\", store.getState());\n};\nconst initialState = {};\n\nconst createStoreWithMiddleware = compose(\n  applyMiddleware(loggerMiddleware,\n    routerMiddleware(browserHistory))\n)(createStore);\n\nconst store = createStoreWithMiddleware(reducer, initialState);\nloadUser(store, userManager);\nloadUser(store, userManagerOlympus);\n\nexport default store;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\r\n// import { userManager, userManagerOlympus } from \"../../../olympus-service-provider/src/utils/userManager\";\r\nimport { push } from \"react-router-redux\";\r\nimport swal from \"sweetalert\";\r\nimport {AppBar, Button, Container, Typography } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nclass CredentialStorage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        // Perform data verification when the component mounts\r\n        this.verifyUserData(this.props.user);\r\n    }\r\n\r\n    // Function to verify user data\r\n    verifyUserData(user) {\r\n        const requiredFields = [\"name\", \"sub\", \"birthdate\", \"nickname\", \"middle_name\", \"family_name\"];\r\n\r\n        if (user && user.profile) {\r\n            // Check if all required fields exist in the user object\r\n            const missingFields = requiredFields.filter((field) => !user.profile[field]);\r\n\r\n            if (missingFields.length === 0) {\r\n                // All required fields are present, data is valid\r\n                swal({\r\n                    title: \"New Curriculum\",\r\n                    text: \"would like to deliver a Credential to your Storage!\",\r\n                    icon: \"warning\",\r\n                    button: \"Allow\",\r\n                });\r\n            } else {\r\n                // Some required fields are missing\r\n                swal({\r\n                    title: \"Error\",\r\n                    text: `Missing fields: ${missingFields.join(\", \")}`,\r\n                    icon: \"error\",\r\n                    button: \"Close\",\r\n                });\r\n            }\r\n        } else {\r\n            // User object or profile data is missing\r\n            swal({\r\n                title: \"Error\",\r\n                text: \"User data is missing or incomplete.\",\r\n                icon: \"error\",\r\n                button: \"Close\",\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // Render your component's UI here\r\n        const { user } = this.props;\r\n\r\n        return (\r\n            <div style={styles.root}>\r\n                <div style={styles.title}>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n\r\n                    </Box>\r\n                    <AppBar position=\"static\">\r\n                    <Typography variant=\"subtitle1\" align=\"center\">\r\n                        <div align=\"center\">\r\n                            <h2 style={{ color:\"forestgreen\" }}>PESTO Credential Created!</h2>\r\n                            <img src={\"/university.png\"} width=\"250\" height=\"160\" />\r\n                            <h4 style={{ color: \"grey\" }}>Full Name: {user ? user.profile.name : \"Mister Unknown\"}</h4>\r\n                            <h4 style={{ color: \"grey\" }}>Username: {user ? user.profile.sub : \"Mister Unknown\"}</h4>\r\n                            <h4 style={{ color: \"grey\" }}>Birthdate: {user ? user.profile.birthdate : \"Birth\"}</h4>\r\n                            <h4 style={{ color: \"grey\" }}>Student Id: {user ? user.profile.nickname : \"-\"}</h4>\r\n                            <h4 style={{ color: \"grey\" }}>Address: {user ? user.profile.middle_name : \"Address 1\"}</h4>\r\n                            <h4 style={{ color: \"grey\" }}>Phone Number: {user ? user.profile.family_name : \"-\"}</h4>\r\n                            <Container style={styles.buttonBox} align=\"center\">\r\n\r\n                                {/*<Button*/}\r\n                                {/*    size=\"large\"*/}\r\n                                {/*    variant=\"outlined\"*/}\r\n                                {/*    o onClick={() => {*/}\r\n                                {/*    userManager.getUser();*/}\r\n                                {/*    userManagerOlympus.storeUser();*/}\r\n                                {/*    // this.props.dispatch(push(\"/verify\"));*/}\r\n                                {/*    setTimeout(() => window.open(\"http://localhost:3000/applicationForm\", \"_blank\"), 1000);*/}\r\n                                {/*}}*/}\r\n                                {/*>*/}\r\n                                {/*    Continue to application form*/}\r\n                                {/*</Button>*/}\r\n                                <br/>\r\n                                <Button\r\n                                    size=\"medium\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        userManager.getUser();\r\n                                        userManagerOlympus.storeUser();\r\n                                        window.close();\r\n                                        window.open(\"http://localhost:8080/logout\", \"_self\");\r\n                                    }}\r\n                                    style={{background:\"#cd101c\"}}\r\n                                >\r\n                                    Close and logout\r\n                                </Button>\r\n                            </Container>\r\n                        </div>\r\n                    </Typography>\r\n                    </AppBar>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        top: \"10%\",\r\n        left:\"45%\",\r\n        position: \"fixed\",\r\n    },\r\n    title: {\r\n        flex: \"1 0 auto\",\r\n    },\r\n    list: {\r\n        listStyle: \"none\",\r\n    },\r\n    li: {\r\n        display: \"flex\",\r\n    },\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.oidc.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CredentialStorage);","import React, { useState } from 'react';\r\nimport {AppBar, Button, Card, Container, MenuItem, Switch, Toolbar, Typography} from \"@material-ui/core\";\r\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\r\n// import { userManager, userManagerOlympus } from \"../../../olympus-service-provider/src/utils/userManager\";\r\nimport swal from 'sweetalert';\r\nimport { connect } from \"react-redux\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {push} from \"react-router-redux\";\r\n\r\nconst fieldDisplayNames = {\r\n    name: \"Full name\",\r\n    birthdate: \"Date of Birth\",\r\n    nickname: \"Student id\",\r\n    middle_name: \"Email\",\r\n    given_name: \"Role\",\r\n};\r\n\r\nconst CheckalreadyCredential = ({ user, dispatch }) => {\r\n\r\n    const [revealDetails, setRevealDetails] = useState({\r\n        name: true,\r\n        birthdate: true,\r\n        nickname: true,\r\n        middle_name: true,\r\n        given_name: true,\r\n\r\n    });\r\n\r\n    const handleToggleReveal = (field) => {\r\n        setRevealDetails((prevState) => ({\r\n            ...prevState,\r\n            [field]: !prevState[field],\r\n        }));\r\n    };\r\n\r\n    const canUserContinue = () => {\r\n        // Verify if at least one field is set to true in revealDetails\r\n        const atLeastOneFieldRevealed = Object.values(revealDetails).some((value) => value === true);\r\n\r\n        // Check if tth current use belongs to the new curriculum\r\n        const isNewCurriculum = user ? /^\\d{4}$/.test(user.profile.nickname) : false;\r\n\r\n        return atLeastOneFieldRevealed && isNewCurriculum;\r\n    }\r\n\r\n    const handleContinueClick = () => {\r\n        userManager.getUser();\r\n        userManagerOlympus.storeUser();\r\n\r\n        const canContinue = canUserContinue();\r\n\r\n        if (canContinue) {\r\n            // Display information about revealed and hidden details\r\n            const revealedInfo = Object.entries(revealDetails)\r\n                .filter(([field, value]) => value)\r\n                .map(([field, value]) => fieldDisplayNames[field] + \": \" + (user ? user.profile[field] : field.charAt(0).toUpperCase() + field.slice(1)))\r\n                .join(', ');\r\n\r\n            const hiddenInfo = Object.entries(revealDetails)\r\n                .filter(([field, value]) => !value)\r\n                .map(([field, value]) => fieldDisplayNames[field] + \": \" + (user ? user.profile[field] : field.charAt(0).toUpperCase() + field.slice(1)))\r\n                .join(', ');\r\n\r\n            swal({\r\n                title: \"Information\",\r\n                text: `Revealed: ${revealedInfo}\\nHidden: ${hiddenInfo}`,\r\n                icon: \"info\",\r\n                button: \"Ok\",\r\n            }).then(() => {\r\n                // Aurora verification message\r\n                swal({\r\n                    title: \"Success\",\r\n                    text: \"You are Verified!!\",\r\n                    icon: \"success\",\r\n                    button: \"Ok\",\r\n                }).then(() => {\r\n                    // After the user closes the second popup, open the application form\r\n                    userManager.getUser();\r\n                    userManagerOlympus.storeUser();\r\n                    dispatch(push(\"/already/credential/Storage\"));\r\n\r\n\r\n                });\r\n            });\r\n        } else {\r\n            // User does not meet the criteria, show a warning and initiate logout\r\n            swal({\r\n                title: \"Details Not Revealed, Invalid Credentials\",\r\n                text: \"Please select at least one detail to reveal.\",\r\n                icon: \"warning\",\r\n                button: \"Ok\",\r\n            }).then(() => {\r\n                // Initiate logout\r\n                userManagerOlympus.signoutRedirect(); // Use your OIDC client's signout method\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        // <div style={styles.root}>\r\n        // <div style={styles.title}>\r\n        // <AppBar position=\"static\">\r\n        <Box style={styles.root}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n            <img src={\"/university.png\"} width=\"250\" height=\"160\"/>\r\n            <h2 style={{ padding: \"10px 20px\", color: \"black\" }}>Credential Options</h2>\r\n\r\n\r\n            <summary>\r\n                <h3 style={{ color: \"green\" }}>Reveal</h3>\r\n            </summary>\r\n            <div>\r\n                {Object.entries(revealDetails).map(([field, value]) => (\r\n                    <div key={field}>\r\n                        <label style={{ display: \"block\" }}>\r\n                            {fieldDisplayNames[field]}: {/* Use display name here */}\r\n                            {user ? user.profile[field] : field.charAt(0).toUpperCase() + field.slice(1)}\r\n                            <Switch\r\n                                checked={value}\r\n                                onChange={() => handleToggleReveal(field)}\r\n                                color=\"primary\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <summary>\r\n                <h3 style={{ color: \"red\" }}>Hide</h3>\r\n            </summary>\r\n            <div>\r\n                {Object.entries(revealDetails).map(([field, value]) => (\r\n                    <div key={field}>\r\n                        <label style={{ display: \"block\" }}>\r\n                            {fieldDisplayNames[field]}: {/* Use display name here */}\r\n                            {user ? user.profile[field] : field.charAt(0).toUpperCase() + field.slice(1)}\r\n                            <Switch\r\n                                checked={!value}\r\n                                onChange={() => handleToggleReveal(field)}\r\n                                color=\"secondary\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Container style={styles.buttonBox}>\r\n                <Button\r\n                    size=\"medium\"\r\n                    variant=\"outlined\"\r\n                    onClick={handleContinueClick}\r\n                >\r\n                    Continue to Application\r\n                </Button>\r\n            </Container>\r\n            </Typography>\r\n        </Box>\r\n\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    title: {\r\n        flex: \"1 0 auto\",\r\n    },\r\n    list: {\r\n        listStyle: \"none\",\r\n    },\r\n    li: {\r\n        display: \"flex\",\r\n    },\r\n    buttonBox: {\r\n        paddingTop: \"10px\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        width: \"150px\",\r\n    },\r\n    subtitle: {\r\n        paddingTop: \"10px\",\r\n    },\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.oidc.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CheckalreadyCredential);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\r\n// import {userManager, userManagerOlympus} from \"../../../olympus-service-provider/src/utils/userManager\";\r\nimport {push} from \"react-router-redux\";\r\nimport swal from 'sweetalert';\r\nimport {Button, Container, Typography, Toolbar, MenuItem, Box, Menu, IconButton, AppBar} from \"@material-ui/core\";\r\n// import Box from \"@mui/material/Box\";\r\n// import Toolbar from \"@mui/material/Toolbar\";\r\n// import MenuIcon from \"@mui/icons-material/Menu\";\r\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\r\n\r\nclass personalization extends React.Component {\r\n    render() {\r\n\r\n        sessionStorage.setItem('', 'value');\r\n        let data = sessionStorage.getItem('key');\r\n        sessionStorage.removeItem('key');\r\n        sessionStorage.clear();\r\n\r\n        const {user} = this.props;\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div style={styles.root}>\r\n                <div style={styles.title}>\r\n                    <Box sx={{flexGrow: 1}}>\r\n\r\n                    </Box>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"start\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\"\r\n                                sx={{mr: 2}}\r\n                            >\r\n                            </IconButton>\r\n                            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n                                {(popupState) => (\r\n                                    <React.Fragment>\r\n                                        <Button color=\"inherit\" uppercase={false} {...bindTrigger(popupState)}\r\n                                                size=\"small\"\r\n\r\n                                        >\r\n                                            IMPORTANT INFORMATION\r\n                                        </Button>\r\n\r\n                                        <Menu {...bindMenu(popupState)}>\r\n                                            <MenuItem onClick={() => {\r\n                                            }}\r\n                                                      style={{color: \"red\"}}>Welcome {user ? user.profile.name : \"Mister Unknown\"}</MenuItem>\r\n                                            <MenuItem onClick={(event) => {\r\n                                                event.preventDefault();\r\n                                                userManager.getUser();\r\n                                                userManagerOlympus.storeUser().then(r => this.props.dispatch(push(\"/success\")))\r\n                                            }}>Home</MenuItem>\r\n                                            <MenuItem onClick={(event) => {\r\n                                                event.preventDefault();\r\n                                                userManager.getUser();\r\n                                                userManagerOlympus.storeUser().then(r => this.props.dispatch(push(\"/information\")))\r\n                                            }}>Personal Information</MenuItem>\r\n                                            {/*<MenuItem onClick={(event) => {*/}\r\n                                            {/*    event.preventDefault();*/}\r\n                                            {/*    // userManager.getpolicy()*/}\r\n                                            {/*    //policy edw kai meta store*/}\r\n                                            {/*    userManager.getUser();*/}\r\n                                            {/*    userManagerOlympus.storeUser().then(r => this.props.dispatch(push(\"/success\")))*/}\r\n                                            {/*}}>See your Credentials</MenuItem>*/}\r\n                                            <MenuItem onClick={(event) => {\r\n                                                event.preventDefault();\r\n                                                userManager.getUser();\r\n                                                userManagerOlympus.storeUser();\r\n                                                window.close();\r\n                                                window.open(\"http://localhost:8080/deleteAccount\", \"_blank\");\r\n                                            }}>Delete Account</MenuItem>\r\n                                            <MenuItem onClick={(event) => {\r\n                                                event.preventDefault();\r\n                                                userManager.getUser();\r\n                                                userManagerOlympus.storeUser();\r\n                                                window.close();\r\n                                                window.open(\"http://localhost:8080/logout\", \"_self\");\r\n                                            }}>Logout</MenuItem>\r\n                                        </Menu>\r\n\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </PopupState>\r\n\r\n\r\n                        </Toolbar>\r\n\r\n                    </AppBar>\r\n                    <Typography variant=\"subtitle1\" align=\"center\">\r\n\r\n                        <img src={\"/university.png\"} width=\"250\" height=\"160\"/>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" align=\"center\">\r\n\r\n                        <h4 style={{color: \"grey\"}}>Full Name:{user ? user.profile.name : \"Mister Unknown\"}</h4>\r\n                        <h4 style={{color: \"grey\"}}> Username: {user ? user.profile.sub : \"Mister Unknown\"}</h4>\r\n                        <h4 style={{color: \"grey\"}}>Birthdate: {user ? user.profile.birthdate : \"Birth\"}</h4>\r\n                        <h6 style={{color: \"grey\"}}>Student Id: {user ? user.profile.nickname : \"Student Id\"}</h6>\r\n                        <h4 style={{color: \"grey\"}}>Email: {user ? user.profile.middle_name : \"Address 01\"}</h4>\r\n                        <h4 style={{color: \"grey\"}}>Phone Number: {user ? user.profile.family_name : \"Address 01\"}</h4>\r\n\r\n\r\n                    </Typography>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    title: {\r\n        flex: \"1 0 auto\"\r\n    },\r\n    list: {\r\n        listStyle: \"none\"\r\n    },\r\n    li: {\r\n        display: \"flex\"\r\n    }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.oidc.user,\r\n    };\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(personalization);\r\n","import React from \"react\";\r\nimport { AppBar, Button, Container, IconButton, Menu, MenuItem, Typography, Toolbar, Box, Card } from \"@material-ui/core\";\r\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\r\nimport { push } from \"react-router-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { connect } from \"react-redux\";\r\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nclass StorageC extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n//    const date = new Date();\r\n//    date.setTime(date.getTime() + (1 * 24 * 60 * 60 * 1000));\r\n//    const expires = \"; expires=\" + date.toUTCString();\r\n//    document.cookie = 'user=' + JSON.stringify(props.user.profile);\r\n\r\n\r\n    this.state = {\r\n      user: {\r\n        profile: {\r\n          name: this.props.user.profile.name,\r\n          birthdate: this.props.user.profile.birthdate,\r\n          nickname: this.props.user.profile.nickname,\r\n          middle_name: this.props.user.profile.middle_name,\r\n          given_name: this.props.user.profile.given_name,\r\n        }\r\n      },\r\n      isDeleteButtonDisabled: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.ifCredentialisMissingDisableTheDeleteButton();\r\n  }\r\n\r\n  ifCredentialisMissingDisableTheDeleteButton = () => {\r\n    const { profile } = this.props.user;\r\n    if (!profile.name || !profile.birthdate  || !profile.nickname || !profile.middle_name || !profile.given_name) {\r\n      this.setState({ isDeleteButtonDisabled: true });\r\n    }\r\n  }\r\n\r\n  pressToDelete = () => {\r\n    // Clear local storage\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"birthdate\");\r\n    localStorage.removeItem(\"nickname\");\r\n    localStorage.removeItem(\"middle_name\");\r\n    localStorage.removeItem(\"given_name\");\r\n\r\n    // Clear state\r\n    const updatedUser = {\r\n      profile: {\r\n        name: null,\r\n        birthdate: null,\r\n        nickname: null,\r\n        middle_name: null,\r\n        given_name: null,\r\n      }\r\n    };\r\n\r\n    this.setState({ user: updatedUser, isDeleteButtonDisabled: true });\r\n\r\n    // Update user profile\r\n    this.props.user.profile.name = null;\r\n    this.props.user.profile.birthdate = null;\r\n    this.props.user.profile.nickname = null;\r\n    this.props.user.profile.middle_name = null;\r\n    this.props.user.profile.given_name = null;\r\n\r\n    // Show alert\r\n      swal({\r\n          title: \"Credential Deleted\",\r\n          text: \"User credential deleted successfully\",\r\n          icon: \"warning\",\r\n          button: \"Ok\",\r\n        }).then(() => {\r\n          window.location.href = \"http://localhost:8080/logout\";\r\n        });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    const { isDeleteButtonDisabled } = this.state;\r\n\r\n    return (\r\n      <Container style={styles.root}>\r\n        <AppBar position=\"static\" style={styles.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <AccountCircle style={{ fontSize: 40 }} />\r\n            </IconButton>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n              {(popupState) => (\r\n                <React.Fragment>\r\n                  <Button color=\"inherit\" {...bindTrigger(popupState)} style={styles.menuButton}>\r\n                    CREDENTIAL STORAGE\r\n                  </Button>\r\n                  <Menu {...bindMenu(popupState)}>\r\n                    <MenuItem onClick={(event) => {\r\n                      event.preventDefault();\r\n                      userManager.getUser();\r\n                      userManagerOlympus.storeUser();\r\n                      swal({\r\n                        title: \"Returning to main page!\",\r\n                        text: \"Redirection...\",\r\n                        icon: \"warning\",\r\n                        button: \"Ok\",\r\n                      }).then(r => this.props.dispatch(push(\"/success\")));\r\n                    }}>Home</MenuItem>\r\n                    <MenuItem onClick={(event) => {\r\n                      event.preventDefault();\r\n                      userManager.getUser();\r\n                      userManagerOlympus.storeUser();\r\n                      swal({\r\n                        title: \"Privacy notice!\",\r\n                        text: \"Sensitive informations will be render to the screen\",\r\n                        icon: \"warning\",\r\n                        button: \"Ok\",\r\n                      }).then(r => this.props.dispatch(push(\"/information\")));\r\n                    }}>Personal Information</MenuItem>\r\n                    <MenuItem onClick={(event) => {\r\n                      event.preventDefault();\r\n                      userManager.getUser();\r\n                      userManagerOlympus.storeUser();\r\n                      window.open(\"http://localhost:8080/changePassword\", \"_blank\");\r\n                    }}>Change Password</MenuItem>\r\n                    <MenuItem onClick={(event) => {\r\n                      event.preventDefault();\r\n                      userManager.getUser();\r\n                      userManagerOlympus.storeUser();\r\n                      window.open(\"http://localhost:8080/deleteAccount\", \"_blank\");\r\n                    }}>Delete Account</MenuItem>\r\n                    <MenuItem onClick={(event) => {\r\n                      event.preventDefault();\r\n                      userManager.removeUser();\r\n                      userManagerOlympus.removeUser();\r\n                      sessionStorage.clear();\r\n                      window.open(\"http://localhost:8080/logout\", \"_blank\");\r\n                    }} style={{ color: \"red\" }}>Logout</MenuItem>\r\n                  </Menu>\r\n                </React.Fragment>\r\n              )}\r\n            </PopupState>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Typography variant=\"subtitle1\" align=\"center\" style={styles.title}>\r\n          <img src={\"/university.png\"} width=\"250\" height=\"160\" alt=\"University Logo\" />\r\n        </Typography>\r\n\r\n        <Card style={styles.card}>\r\n          <Typography variant=\"body1\" align=\"center\">\r\n            <details>\r\n              <summary>Credentials Storage</summary>\r\n              <Typography variant=\"body2\" style={styles.credentials}>\r\n                <div>FullName: {user ? user.profile.name : \"Mister Unknown\"}</div>\r\n                <div>Birthdate: {user ? user.profile.birthdate : \"\"}</div>\r\n                <div>Clinician ID: {user ? user.profile.nickname : \"-\"}</div>\r\n                <div>Email: {user ? user.profile.middle_name : \"-\"}</div>\r\n                <div>Role: {user ? user.profile.given_name : \"-\"}</div>\r\n              </Typography>\r\n\r\n              <Button\r\n                size=\"large\"\r\n                onClick={(event) => {\r\n                  event.preventDefault();\r\n                  this.pressToDelete();\r\n                }}\r\n                disabled={isDeleteButtonDisabled}\r\n                style={styles.deleteButton}\r\n              >\r\n                Delete this Credential\r\n              </Button>\r\n            </details>\r\n          </Typography>\r\n        </Card>\r\n\r\n        <Container style={styles.buttonBox}>\r\n          <Button size=\"medium\" variant=\"outlined\" style={styles.continueButton}\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              userManager.getUser();\r\n              userManagerOlympus.storeUser();\r\n              try {\r\n                if (user.profile.name) {\r\n                  this.props.dispatch(push(\"/checkAccessCredential/already/credential/verifier\"));\r\n                } else {\r\n                  window.close();\r\n                  window.open(\"http://localhost:8080/error\", \"_self\");\r\n                }\r\n              } catch (err) {\r\n                console.log(err);\r\n                window.close();\r\n                window.open(\"http://localhost:8080/error\", \"_self\");\r\n              }\r\n            }}>Continue to Application\r\n          </Button>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"40px\",\r\n    background: \"linear-gradient(to right, #33a7c4, #74bfc4)\",\r\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\r\n    borderRadius: \"20px\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  appBar: {\r\n    width: \"100%\",\r\n    background: \"linear-gradient(to right, #33a7c4, #74bfc4)\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  title: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  menuButton: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  credentials: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: '#c91313',\r\n    color: 'white',\r\n  },\r\n  buttonBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  continueButton: {\r\n    color: \"black\",\r\n  },\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.oidc.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(StorageC);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\r\nimport { Button, Container, Typography, IconButton, Box, AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { push } from \"react-router-redux\";\r\nimport PopupState, { bindTrigger } from 'material-ui-popup-state';\r\nimport swal from 'sweetalert';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst CheckAccessCredential = ({ user, dispatch }) => {\r\n\r\n  const hasAccess = () => {\r\n    if (!user.profile.name || !user.profile.middle_name || !user.profile.nickname) {\r\n      swal({\r\n        title: \"Get Credential!\",\r\n        text: \"Credential  not found. Redirection to Get Credential...\",\r\n        icon: \"warning\",\r\n        button: \"Ok\",\r\n      }).then((r) => {\r\n        userManager.getUser();\r\n        userManagerOlympus.storeUser();\r\n        user.profile.name = localStorage.getItem(\"name\");\r\n        user.profile.birthdate = localStorage.getItem(\"birthdate\");\r\n        user.profile.nickname = localStorage.getItem(\"nickname\");\r\n        user.profile.middle_name = localStorage.getItem(\"middle_name\");\r\n        user.profile.given_name = localStorage.getItem(\"given_name\");\r\n        dispatch(push(\"/checkAccessCredential/already/credential\"));\r\n      });\r\n    } else {\r\n      swal({\r\n        title: \"Access Granted!\",\r\n        text: \"This user posses a valid Credential\",\r\n        icon: \"success\",\r\n        button: \"Ok\",\r\n      }).then((r) => {\r\n        userManager.getUser();\r\n        userManagerOlympus.storeUser();\r\n        dispatch(push(\"/checkAccessCredential/Storage\"));\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={styles.root}>\r\n      <AppBar position=\"static\" style={styles.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <AccountCircle style={{ fontSize: 40 }} />\r\n          </IconButton>\r\n          <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n            {(popupState) => (\r\n              <React.Fragment>\r\n                <Button color=\"inherit\" {...bindTrigger(popupState)} style={styles.menuButton}>\r\n                  Check Access\r\n                </Button>\r\n              </React.Fragment>\r\n            )}\r\n          </PopupState>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Typography variant=\"h4\" style={styles.title}>\r\n        Check Access Credential\r\n      </Typography>\r\n\r\n      <Box style={styles.buttonBox}>\r\n        {!user.profile.name || !user.profile.nickname || !user.profile.middle_name || !user.profile.preferred_username || !user.profile.birthdate ? (\r\n          <Button\r\n            size=\"medium\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={styles.actionButton}\r\n            onClick={hasAccess}\r\n          >\r\n            Get A Credential\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            size=\"medium\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={styles.actionButton}\r\n            onClick={hasAccess}\r\n          >\r\n            Login Via Credential\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    padding: \"40px\",\r\n    background: \"linear-gradient(to right, #33a7c4, #74bfc4)\",\r\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\r\n    borderRadius: \"20px\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  appBar: {\r\n    background: \"linear-gradient(to right, #33a7c4, #74bfc4)\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0px 10px 20px rgba(0, 0, 0, 0.1)\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    marginBottom: \"20px\",\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonBox: {\r\n    paddingTop: \"10px\",\r\n    width: \"150px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  actionButton: {\r\n    padding: \"10px 20px\",\r\n    borderRadius: \"10px\",\r\n    textTransform: \"none\",\r\n    fontSize: \"16px\",\r\n  },\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.oidc.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CheckAccessCredential);","import React, { useState, useEffect } from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, Container, Switch } from \"@material-ui/core\";\r\nimport { userManager, userManagerOlympus } from \"../utils/userManager\";\r\nimport swal from 'sweetalert';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Watch = ({ user }) => {\r\n    const [details, setDetails] = useState({\r\n        \"Full Name\": '',\r\n        \"Birthdate\": '',\r\n        \"Clinician Id\": '',\r\n        \"Email\": '',\r\n        \"Role\": '',\r\n    });\r\n\r\n    const [revealDetails, setRevealDetails] = useState({\r\n        \"Full Name\": true,\r\n        \"Birthdate\": true,\r\n        \"Clinician Id\": true,\r\n        \"Email\": true,\r\n        \"Role\": true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user && user.profile) {\r\n            setDetails({\r\n                \"Full Name\": user.profile.name || '',\r\n                \"Birthdate\": user.profile.birthdate || '',\r\n                \"Clinician Id\": user.profile.nickname || '',\r\n                \"Email\": user.profile.middle_name || '',\r\n                \"Role\": user.profile.given_name || '',\r\n            });\r\n        }\r\n    }, [user]);\r\n\r\n    const handleToggleReveal = (field) => {\r\n        setRevealDetails((prevState) => ({\r\n            ...prevState,\r\n            [field]: !prevState[field],\r\n        }));\r\n    };\r\n\r\n    const canUserContinue = () => {\r\n        const atLeastOneFieldRevealed = Object.values(revealDetails).some((value) => value === true);\r\n        const isRole = details[\"Role\"] === \"Clinician\";\r\n        return atLeastOneFieldRevealed && isRole;\r\n    };\r\n\r\n    const handleContinueClick = () => {\r\n        userManager.getUser();\r\n        userManagerOlympus.storeUser();\r\n\r\n        console.log(\"***\", userManager.getUser());\r\n\r\n        const canContinue = canUserContinue();\r\n\r\n        if (canContinue) {\r\n            const predicates = [\r\n                { Full_Name: user.profile.name, revealed: revealDetails[\"Full Name\"], attribute: \"name\" },\r\n                { Birthdate: user.profile.birthdate, revealed: revealDetails[\"Birthdate\"], attribute: \"birthdate\" },\r\n                { Clinician_Id: user.profile.nickname, revealed: revealDetails[\"Clinician Id\"], attribute: \"nickname\" },\r\n                { Email: user.profile.middle_name, revealed: revealDetails[\"Email\"], attribute: \"middle_name\" },\r\n                { Role: user.profile.given_name, revealed: revealDetails[\"Role\"], attribute: \"given_name\" },\r\n            ].filter(predicate => predicate.revealed);\r\n\r\n            document.cookie = 'predicates=' + JSON.stringify(predicates) + ';path=/';\r\n\r\n            const revealedInfo = Object.entries(revealDetails)\r\n                .filter(([field, value]) => value)\r\n                .map(([field, value]) => field)\r\n                .join(', ');\r\n\r\n            const hiddenInfo = Object.entries(revealDetails)\r\n                .filter(([field, value]) => !value)\r\n                .map(([field, value]) => field)\r\n                .join(', ');\r\n\r\n            swal({\r\n                title: \"Information\",\r\n                text: `Revealed: ${revealedInfo}\\nHidden: ${hiddenInfo}`,\r\n                icon: \"info\",\r\n                button: \"Ok\",\r\n            }).then(() => {\r\n                swal({\r\n                    title: \"Aurora Minds\",\r\n                    text: \"You are Verified!!\",\r\n                    icon: \"success\",\r\n                    button: \"Ok\",\r\n                }).then(() => {\r\n                    window.location.href = \"http://localhost:8080/verify1\";\r\n                });\r\n            });\r\n        } else {\r\n            swal({\r\n                title: \"Details Not Revealed or Invalid Specialty\",\r\n                text: \"Please select at least one detail to reveal the information.\",\r\n                icon: \"warning\",\r\n                button: \"Ok\",\r\n            }).then(() => {\r\n                userManagerOlympus.signoutRedirect();\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Typography variant=\"subtitle1\" align=\"center\">\r\n            <img src=\"/university.png\" width=\"250\" height=\"160\" alt=\"Logo\" />\r\n            <h2 style={{ padding: \"10px 20px\", color: \"black\" }}>Credential</h2>\r\n\r\n            <summary>\r\n                <h3 style={{ color: \"green\" }}>Reveal</h3>\r\n            </summary>\r\n            <div>\r\n                {Object.entries(details).map(([field, value]) => (\r\n                    <div key={field}>\r\n                        <label style={{ display: \"block\" }}>\r\n                            {field}: {value}\r\n                            <Switch\r\n                                checked={revealDetails[field]}\r\n                                onChange={() => handleToggleReveal(field)}\r\n                                color=\"primary\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <summary>\r\n                <h3 style={{ color: \"red\" }}>Hide</h3>\r\n            </summary>\r\n            <div>\r\n                {Object.entries(details).map(([field, value]) => (\r\n                    <div key={field}>\r\n                        <label style={{ display: \"block\" }}>\r\n                            {field}: {value}\r\n                            <Switch\r\n                                checked={!revealDetails[field]}\r\n                                onChange={() => handleToggleReveal(field)}\r\n                                color=\"secondary\"\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Container style={styles.buttonBox}>\r\n                <Button\r\n                    size=\"medium\"\r\n                    variant=\"outlined\"\r\n                    onClick={handleContinueClick}\r\n                >\r\n                    Continue to application form\r\n                </Button>\r\n            </Container>\r\n        </Typography>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    title: {\r\n        flex: \"1 0 auto\",\r\n    },\r\n    list: {\r\n        listStyle: \"none\",\r\n    },\r\n    li: {\r\n        display: \"flex\",\r\n    },\r\n    buttonBox: {\r\n        paddingTop: \"10px\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\",\r\n        width: \"150px\",\r\n    },\r\n    subtitle: {\r\n        paddingTop: \"10px\",\r\n    },\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    let user = state.oidc.user;\r\n\r\n    if (!user) {\r\n        const userDataCookie = getCookie('userData');\r\n        if (userDataCookie) {\r\n            try {\r\n                user = JSON.parse(userDataCookie);\r\n                user.profile = {\r\n                    name: user.name,\r\n                    birthdate: user.birthdate,\r\n                    nickname: user.nickname,\r\n                    middle_name: user.middle_name,\r\n                    given_name: user.given_name,\r\n                };\r\n            } catch (e) {\r\n                console.error('Error parsing JSON from cookie:', e);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        user: user,\r\n    };\r\n}\r\n\r\n// Function to get a specific cookie by name\r\nfunction getCookie(name) {\r\n    let cookieArr = document.cookie.split(\";\");\r\n\r\n    for (let i = 0; i < cookieArr.length; i++) {\r\n        let cookiePair = cookieArr[i].split(\"=\");\r\n\r\n        // Remove leading spaces and compare cookie name\r\n        if (name === cookiePair[0].trim()) {\r\n            return decodeURIComponent(cookiePair[1]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Watch);\r\n","import React from 'react';\r\nimport { Container, Button, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nfunction getCookie(name) {\r\n    let cookieArr = document.cookie.split(\";\");\r\n\r\n    for (let i = 0; i < cookieArr.length; i++) {\r\n        let cookiePair = cookieArr[i].split(\"=\");\r\n\r\n        // Remove leading spaces and compare cookie name\r\n        if (name === cookiePair[0].trim()) {\r\n            return decodeURIComponent(cookiePair[1]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst LoginDS = () => {\r\n    const history = useHistory();\r\n\r\n    const handleUpload = () => {\r\n         let userDataCookie = getCookie('userData');\r\n         if (userDataCookie) {\r\n                // Print the raw cookie data to debug\r\n                console.log('Raw userDataCookie:', userDataCookie);\r\n\r\n                try {\r\n                    // Parse the JSON data from the cookie\r\n                    let userData = JSON.parse(userDataCookie);\r\n\r\n                    //console.log(userData);\r\n\r\n                    // Extract specific fields\r\n                    let name = userData.name;\r\n                    let nickname = userData.nickname;\r\n                    let birthdate = userData.birthdate;\r\n                    let middleName = userData.middle_name;\r\n                    let given_name = userData.given_name;\r\n\r\n                swal({\r\n                    title: \"Upload Successful\",\r\n                    text: \"Credential has been uploaded!\",\r\n                    icon: \"success\",\r\n                    button: \"Ok\",\r\n                }).then(() => {\r\n                    window.location.href = ('/login_DS/verifypresentation');\r\n                });\r\n            } catch (e) {\r\n                console.error('Error parsing JSON from cookie:', e);\r\n                swal({\r\n                    title: \"Upload Failed\",\r\n                    text: \"Error parsing user data from cookie\",\r\n                    icon: \"error\",\r\n                    button: \"Ok\",\r\n                });\r\n            }\r\n        } else {\r\n            swal({\r\n                title: \"No Credential Found\",\r\n                text: \"No user data cookie found\",\r\n                icon: \"error\",\r\n                button: \"Ok\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={styles.container}>\r\n            <Typography variant=\"h4\" style={styles.title}>\r\n                Upload Credential\r\n            </Typography>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                style={styles.button}\r\n                onClick={handleUpload}\r\n            >\r\n                Upload Credential\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        background: 'linear-gradient(to right, #33a7c4, #74bfc4)',\r\n        padding: '20px',\r\n        borderRadius: '20px',\r\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    title: {\r\n        marginBottom: '20px',\r\n        color: '#fff',\r\n    },\r\n    button: {\r\n        padding: '10px 0',\r\n    },\r\n};\r\n\r\nexport default LoginDS;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Container, Button, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nfunction getCookie(name) {\r\n    let cookieArr = document.cookie.split(\";\");\r\n\r\n    for (let i = 0; i < cookieArr.length; i++) {\r\n        let cookiePair = cookieArr[i].split(\"=\");\r\n\r\n        // Remove leading spaces and compare cookie name\r\n        if (name === cookiePair[0].trim()) {\r\n            return decodeURIComponent(cookiePair[1]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst VerifyPresentation = () => {\r\n    const history = useHistory();\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let userDataCookie = getCookie('userData');\r\n        if (userDataCookie) {\r\n            // Print the raw cookie data to debug\r\n            console.log('Raw userDataCookie:', userDataCookie);\r\n\r\n            try {\r\n                // Parse the JSON data from the cookie\r\n                const parsedData = JSON.parse(userDataCookie);\r\n\r\n                // Extract specific fields and construct the userData object\r\n                const userData = {\r\n                    name: parsedData.name,\r\n                    birthdate: parsedData.birthdate,\r\n                    nickname: parsedData.nickname,\r\n                    middle_name: parsedData.middle_name,\r\n                    given_name: parsedData.given_name,\r\n                };\r\n\r\n                console.log('Formatted userData:', userData);\r\n                setUserData(userData);\r\n\r\n            } catch (e) {\r\n                console.error('Error parsing JSON from cookie:', e);\r\n                swal({\r\n                    title: \"Upload Failed\",\r\n                    text: \"Error parsing user data from cookie\",\r\n                    icon: \"error\",\r\n                    button: \"Ok\",\r\n                });\r\n            }\r\n        } else {\r\n            swal({\r\n                title: \"No Credential Found\",\r\n                text: \"No user data cookie found\",\r\n                icon: \"error\",\r\n                button: \"Ok\",\r\n            });\r\n        }\r\n    }, [history]);\r\n\r\n    const handleExportPolicy = () => {\r\n        if (userData) {\r\n            const predicates = [\r\n                { Full_Name: userData.name, attribute: \"name\" },\r\n                { Birthdate: userData.birthdate, attribute: \"birthdate\" },\r\n                { Clinician_Id: userData.nickname, attribute: \"nickname\" },\r\n                { Email: userData.middle_name, attribute: \"middle_name\" },\r\n                { Role: userData.given_name, attribute: \"preferred_username\" },\r\n            ];\r\n\r\n            document.cookie = 'predicates=' + JSON.stringify(predicates) + ';path=/';\r\n\r\n            swal({\r\n                title: \"Policy Exported\",\r\n                text: \"Policy has been exported to cookie!\",\r\n                icon: \"success\",\r\n                button: \"Ok\",\r\n            });\r\n        } else {\r\n            swal({\r\n                title: \"No User Data\",\r\n                text: \"No user data available to export policy\",\r\n                icon: \"error\",\r\n                button: \"Ok\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={styles.container}>\r\n            <Typography variant=\"h4\" style={styles.title}>\r\n                Verify Presentation\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"primary\" style={styles.button} onClick={handleExportPolicy}>\r\n                Export Policy\r\n            </Button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        background: 'linear-gradient(to right, #33a7c4, #74bfc4)',\r\n        padding: '20px',\r\n        borderRadius: '20px',\r\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    title: {\r\n        marginBottom: '20px',\r\n        color: '#fff',\r\n    },\r\n    button: {\r\n        padding: '10px 0',\r\n    },\r\n};\r\n\r\nexport default VerifyPresentation;\r\n","import React from \"react\";\nimport { Router, Route, browserHistory } from \"react-router\";\nimport HomePage from \"../components/homePage\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport CallbackPageOL from \"../components/callbackOL\";\nimport CallbackPageKC from \"../components/callbackKC\";\nimport LoginPage from \"../components/loginPage\";\nimport MainPage from \"../components/mainPage\";\nimport store from \"../store/store\";\nimport CredentialStorage from \"../components/credentialStorage\";\nimport CheckalreadyCredential from \"../components/checkalreadyCredential\";\nimport personalization from \"../components/personalization\";\nimport StorageC from \"../components/Storage\";\nimport CheckAccessCredential from \"../components/CheckAccessCredential\";\nimport verifier from \"../components/watch-verifier\"\nimport verificationPage from '../components/verificationPage';\nimport loginDS from '../components/loginDS';\nimport verifyPresentation from '../components/verifyPresentation';\nconst history = syncHistoryWithStore(browserHistory, store);\n\nexport default function Routes(props) {\n  return (\n    <Router history={history}>\n      <Route path=\"/\" component={HomePage} />\n      <Route path=\"/login\" component={LoginPage} />\n      <Route path=\"/success\" component={MainPage} />\n      <Route path=\"/callbackOL\" component={CallbackPageOL} />\n      <Route path=\"/callbackKC\" component={CallbackPageKC} />\n      <Route path=\"/create/credential\" component={CredentialStorage}/>\n      <Route path=\"/already/credential\" component={CheckalreadyCredential} />\n      <Route path=\"/information\" component={personalization}/>\n      <Route path=\"/Storage\" component={StorageC} />\n      <Route path=\"/already/credential/Storage\" component={StorageC}/>\n      <Route path=\"/checkAccessCredential\" component={CheckAccessCredential} />\n      <Route path=\"/checkAccessCredential/Storage\" component={StorageC} />\n      <Route path=\"/checkAccessCredential/already/credential\" component={CheckalreadyCredential} />\n      <Route path=\"/checkAccessCredential/already/credential/verifier\" component= {verifier}/>\n      <Route path=\"/checkAccessCredential/already/credential/verifier/verificationPage\" component= {verifier}/>\n      <Route path=\"/login_DS\" component= {loginDS}/>\n      <Route path=\"/login_DS/verifyPresentation\" component= {verifyPresentation}/>\n    </Router>\n  );\n}\n","import React from \"react\";\n\nfunction Root(props) {\n  return <div style={styles.content}>{props.children}</div>;\n}\n\nconst styles = {\n  content: {\n    padding: \"1.5em\",\n    flex: \"1 0 auto\",\n  },\n};\n\nexport default Root;\n","export default __webpack_public_path__ + \"static/media/restaurant.cce1acb7.jpg\";","import { createMuiTheme } from '@material-ui/core/styles';\nimport Image from './static/restaurant.jpg'; \n\nexport const theme = createMuiTheme({\n  palette: {\n    background: {\n      backgroundImage: `url(${Image})`,\n      paper: '#fff',\n    },\n    primary: {\n      main: '#403f44'\n    },\n    secondary: {\n      main: '#56978e'\n    },\n    warmGrey: {\n      main: '#403f44',\n      light: '#f5f5f5'\n    },\n    success: {\n      main: '#5CBC84'\n    },\n    warning: {\n      main: '#EDD75E'\n    },\n    error: {\n      main: '#F04B2E'\n    },\n    unknown: {\n      main: '#80808055'\n    },\n    common: {\n      black: '#000',\n      white: '#fff'\n    },\n  }\n});\n","import React from \"react\";\nimport { userManager } from \"../utils/userManager\";\nimport { OidcProvider } from \"redux-oidc\";\nimport Routes from \"../routing/routes\";\nimport store from \"../store/store\";\nimport Root from \"./root\";\nimport { Paper } from \"@material-ui/core\"\nimport Box from \"@material-ui/core/Box\";\nimport { Container } from \"@material-ui/core\";\nimport { theme } from \"../theme\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\n\nfunction App() {\n  return (\n    <Container style={styles.background} maxWidth=\"100%\">\n      <MuiThemeProvider theme={theme}>\n        <Container style={styles.content}>\n          <Box style={styles.box} boxShadow={3}>\n            <Paper style={styles.paper}>\n              <OidcProvider store={store} userManager={userManager}>\n                <Root>\n                  <Routes />\n                </Root>\n              </OidcProvider>\n            </Paper>\n          </Box>\n        </Container>\n      </MuiThemeProvider>\n    </Container>\n  );\n}\n\nconst styles = {\n  background: {\n    backgroundImage: `url(${Image})`,\n    backgroundSize: \"cover\",\n    height: \"1280px\",\n    paddingTop: \"0px\",\n  },\n  box: {\n    maxWidth: \"600px\",\n    maxHeight: \"350px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  paper: {\n    maxWidth: \"600px\",\n    maxHeight: \"350px\",\n  },\n  content: {\n    paddingTop: \"250px\",\n  },\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}